*** SHED SKIN Python-to-C++ Compiler 0.6 ***
Copyright 2005-2010 Mark Dufour; License GNU GPL version 3 (See LICENSE)

seed template function (class Bla, '__setattr__') None 1 0
seed template function (class Bla, '__str__') None 1 0
seed template function (class Bla, '__iadd__') None 1 0
seed template function (class Bla, '__getattr__') None 1 0
seed template function (class Bla, '__imul__') None 1 0
[iterative type analysis..]
table

cpa function gen_object 0 None
create template
funccopy function gen_object () 0 0
seed template function gen_object () 0 0
hop (CallFunc(Name('Bla'), [], None, None), 0, 0)
no mother (CallFunc(Name('Bla'), [], None, None), 0, 0) set([(class Bla, 1)])
seeding set([(class Bla, 1)])
CHECK CALLFUNCS!!! [CallFunc(Name('Bla'), [], None, None)]
after seed:
('gen_object', (), CallFunc(Name('Bla'), [], None, None)): (class Bla, 1)
*table
('gen_object', (), CallFunc(Name('Bla'), [], None, None)): (class Bla, 1)
cpa function gen_object 0 None
create template
funccopy function gen_object () 0 0
seed template function gen_object () 0 0
hop (CallFunc(Name('Bla'), [], None, None), 0, 0)
specified
seeding set([(class Bla, 1)])
CHECK CALLFUNCS!!! [CallFunc(Name('Bla'), [], None, None)]
after seed:
('gen_object', (), CallFunc(Name('Bla'), [], None, None)): (class Bla, 1)
*
iterations: 2 templates: 35
cpa function gen_object 0 None
[generating c++ code..]
